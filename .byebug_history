continue
ENV["CERTIFICATION_HOST"]
continue
ENV["CERTIFICATION_HOST"]
continue
ENV["CERTIFICATION_HOST"]
continue
ENV["SMTP_SERVER_ADDRESS"]
continue
calification.question_answers[0].answer_options
calification.question_answers[0].feedback
calification.question_answers[0].enunciate
calification.question_answers[0]
calification.question_answers.count
calification.question_answers
calification.exam_score
continue
StudentAnswer.find_by(student_id: params[:student_id], exam_id: params[:exam_id])
calification
conitnue
continue
StudentAnswer.find_by(student_id: params[:student_id], exam_id: params[:exam_id])
params[:student_id]
continue
cert_pivot = Certificate.find_by(title: certificate[:title], course_id: @course.id, certificate_type: params[:certificate][:certificate_type])
cert_pivot.nil?
cert_pivot = Certificate.find_by(title: certificate[:title], course_id: @course.id, certificate_type: params[:certificate][:certificate_type])
continue
params[:certificates][1]
params[:certificates][0]
params[:certificates]
continue
continue'
params[:certificates]
params[:certificate]
params
continue
params[:certificates][3]
params[:certificates][2]
params[:certificates][1]
params[:certificates][0]
params[:certificates][5]
params[:certificates][5][:hours]
params[:certificates][4][:hours]
params[:certificates][3][:hours]
params[:certificates][2][:hours]
params[:certificates][1][:hours]
params[:certificates][0][:hours]
params[:certificates].count
params[:certificates]
params
continue
params
continue
params
continue
exams.count
exams
exam
total_percent
scores
final_score.present?
final_score.nil?
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
final_score
continue
professor = Professor.find(params[:id])
professor = Profesor.find(params[:id])
rofessor = Profesor.find(params[:id])
params[:id]
continue
params
continue
Time.now + 60.days
Time.now
params[:start]
params[:start_date]
params[:description]
params[:code]
params[:name]
params
continue
params[:course_id]
params
continue
params[:course
continue
(Time.now.month).to_s
(Time.now.year%2000).to_s
yearNow = Time.now.year%2000.to_s
    monthNow = Time.now.month.to_s
params[:phone]
yearNow + monthNow + "-EST-" + params[:document_number] + "-MGN"
params[:gender]
params[:status]
params[:document_number]
params[:document_type]
params[:last_name]
params[:first_name]
params[:email]
params[:document_number]
Student.new(params)
Student.find_by(document_number: params[:document_number])
params[:document_number]
params
continue
aux.nil?
aux = StudentRecord.find_by(document_number: params[:document_number], course_code: params[:course_code])
StudentRecord.find_by(document_number: params[:document_number], course_code: params[:course_code])
student_record_params
continue
cntinue
student_record_params
params
continue
params
continue
params[:end_date].to_date - 1.minute
params[:end_date].to_date.end_of_day
params[:end_date].to_date - 1.minute
params[:end_date].to_date - 1.hour
params[:end_date].to_date
params[:end_date]
continue
params[:end_date]
params[:start_date]
params
continue
current_exam.nil?
current_exam
current_student.student_answers.find_by(exam_id: params[:exam_id])
params
continue
curso
curso = Course.last.dup
self.name
self
continue
self.name
self
continue
course_reference_id
continue
course_reference_id
self
continue
params[:name]
params
continue
params[:student_visibility]
continue
params
params[:student_visibility]
exam_params
continue
exam_params
params[:student_visibility]
params
exit
params[:members_attributes].each do |member| puts member.class end
params[:members_attributes].each do |member| puts member end
params[:members_attributes]
params[:members_attributes"]
Course.find(params[:course_id])
params[:course_id]
params
continue
@professor
params
